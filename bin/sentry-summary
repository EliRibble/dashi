#!/usr/bin/env python
import argparse
import dateutil.parser
import dashi.config
import dashi.sentry
import dashi.time
import datetime
import logging
import pdb
import pprint
import requests
import sys

LOGGER = logging.getLogger('jira-summary')

def info(type, value, tb):
    if hasattr(sys, 'ps1') or not sys.stderr.isatty():
        sys.__excepthook__(type, value, tb)
    else:
        import traceback
        traceback.print_exception(type, value, tb)
        pdb.pm()
sys.excepthook = info

def _resolved_between(issue, start, end):
    for action in issue['activity']:
        created = dateutil.parser.parse(action['dateCreated'])
        if all([
            action['type'] == 'set_resolved',
            created > start,
            created < end]):
            return True
    return False

def _resolved_by(issue, user):
    for action in issue['activity']:
        created = dateutil.parser.parse(action['dateCreated'])
        if all([
            action['type'] == 'set_resolved',
            action['user']['name'] in user.aliases if action['user'] else False,
            ]):
            return True
    return False

def _get_resolved_between(issues, start, end):
    return [issue for issue in issues if _resolved_between(issue, start, end)]

def _get_resolved_between_by(issues, start, end, user):
    return [issue for issue in issues if _resolved_between(issue, start, end) and _resolved_by(issue, user)]

def _show_summary(issues, timepoint, user):
    start, end = dashi.time.get_checkpoint(timepoint)
    resolved = _get_resolved_between(issues, start, end)
    personally = _get_resolved_between_by(issues, start, end, user)
    print("\t".join(map(str, [
        start,
        end,
        len(resolved),
        len(personally),
    ])))

def main():
    logging.basicConfig()
    logging.getLogger().setLevel(logging.DEBUG)
    logging.getLogger('requests').setLevel(logging.WARN)

    parser = argparse.ArgumentParser()
    parser.add_argument('user', help='The user to show stats for')
    args = parser.parse_args()

    config = dashi.config.parse()
    user = dashi.config.get_user(config, args.user)

    session = dashi.sentry.create_session(config['sentry']['username'], config['sentry']['password'])
    all_issues = [dashi.sentry.get_resolved_issues(session, project) for project in config['sentry']['projects']]
    all_issues = [issue for group in all_issues for issue in group]

    print("Start Date\tEnd Date\tResolved\tPsnl")
    timepoint = datetime.datetime(2015, 8, 1, 0, 0, 1)
    now = datetime.datetime.utcnow()
    while timepoint < now + datetime.timedelta(days=7):
        summary = _show_summary(all_issues, timepoint, user)
        timepoint = timepoint + datetime.timedelta(days=7)


if __name__ == '__main__':
    main()
